// package assesmentrolemapping

// import (
// 	"strings"
// 	"time"

// 	"github.com/aws/aws-sdk-go/aws"
// 	"github.com/aws/aws-sdk-go/service/dynamodb"
// 	Validation "github.com/go-ozzo/ozzo-validation/v4"
// 	"riscvue.com/pkg/entities/assesmentrolemapping"
// )

// type Rules struct{}

// func NewRules() *Rules {
// 	return &Rules{}
// }

// func (r *Rules) Migrate(connection *dynamodb.DynamoDB) error {
// 	return r.createTable(connection)
// }

// func (r *Rules) createTable(connection *dynamodb.DynamoDB) error {
// 	table := &assesmentrolemapping.AssesmentUserMappingRole{}

// 	input := &dynamodb.CreateTableInput{
// 		AttributeDefinitions: []*dynamodb.AttributeDefinition{
// 			{
// 				AttributeName: aws.String("RoleId"),
// 				AttributeType: aws.String("S"),
// 			},
// 		},
// 		KeySchema: []*dynamodb.KeySchemaElement{
// 			{
// 				AttributeName: aws.String("RoleId"),
// 				KeyType:       aws.String("HASH"),
// 			},
// 		},
// 		ProvisionedThroughput: &dynamodb.ProvisionedThroughput{
// 			ReadCapacityUnits:  aws.Int64(10),
// 			WriteCapacityUnits: aws.Int64(10),
// 		},
// 		TableName: aws.String(table.TableName()),
// 	}
// 	response, err := connection.CreateTable(input)
// 	if err != nil && strings.Contains(err.Error(), "Table already exists") {
// 		return nil
// 	}
// 	if response != nil && strings.Contains(response.GoString(), "TableStatus: \"CREATING\"") {
// 		time.Sleep(3 * time.Second)
// 		err = r.createTable(connection)
// 		if err != nil {
// 			return err
// 		}
// 	}
// 	return err
// }

// func (r *Rules) GetMock() interface{} {
// 	return assesmentrolemapping.AssesmentUserMappingRole{
// 		RoleId: time.Now().String(),
// 	}
// }

// func (r *Rules) Validate(model interface{}) error {

// 	assesmentrolemappingModel, err := assesmentrolemapping.InterfaceToModel(model)
// 	if err != nil {
// 		return err
// 	}
// 	return Validation.ValidateStruct(assesmentrolemappingModel,
// 		Validation.Field(&assesmentrolemappingModel.RoleId, Validation.Required, Validation.Length(3, 50)),
// 		Validation.Field(&assesmentrolemappingModel.UserId, Validation.Required, Validation.Length(3, 50)),
// 		Validation.Field(&assesmentrolemappingModel.AssesmentId, Validation.Required, Validation.Length(3, 50)),
// 	)
// }
